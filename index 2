<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Insurance Quote Multi-Step Form</title>
  <script src="https://cdn.jsdelivr.net/npm/react@18.2.0/umd/react.production.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/react-dom@18.2.0/umd/react-dom.production.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/babel-standalone@7.22.9/babel.min.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
  <div id="root"></div>
  <script type="text/babel">
    function InsuranceForm() {
      const [step, setStep] = React.useState(1);
      const [formData, setFormData] = React.useState({
        personalInfo: {
          fullName: '',
          dateOfBirth: '',
          email: '',
          phone: '',
          address: { street: '', city: '', state: '', zip: '' }
        },
        vehicles: [{ year: '', make: '', model: '', vin: '', annualMileage: '', isFinancedOrLeased: 'no' }],
        driverDetails: {
          licenseNumber: '',
          stateOfIssue: '',
          yearsLicensed: '',
          accidentsOrViolations: 'no'
        },
        currentInsurance: {
          isInsured: 'no',
          insurerName: '',
          policyExpiration: ''
        },
        coveragePreferences: {
          coverageType: 'liability',
          deductible: '500',
          additionalFeatures: { roadside: false, rental: false }
        }
      });
      const [makes, setMakes] = React.useState([]);
      const [models, setModels] = React.useState([]);
      const [loadingMakes, setLoadingMakes] = React.useState(false);
      const [loadingModels, setLoadingModels] = React.useState(false);
      const [apiError, setApiError] = React.useState('');

      // Generate years from 1981 to 2025
      const years = Array.from({ length: 2025 - 1981 + 1 }, (_, i) => 1981 + i);

      // Fetch makes for a given year (passenger cars only)
      const fetchMakes = async (year, index) => {
        if (!year) return;
        setLoadingMakes(true);
        setApiError('');
        try {
          const response = await fetch(`https://vpic.nhtsa.dot.gov/api/vehicles/GetMakesForVehicleType/Car?year=${year}&format=json`);
          const data = await response.json();
          if (data.Results) {
            setMakes(data.Results.map((item) => item.Make_Name).sort());
            // Reset make and model for the vehicle if year changes
            setFormData((prev) => {
              const updatedVehicles = [...prev.vehicles];
              updatedVehicles[index] = { ...updatedVehicles[index], make: '', model: '' };
              return { ...prev, vehicles: updatedVehicles };
            });
            setModels([]);
          } else {
            setApiError('No makes found for the selected year.');
          }
        } catch (error) {
          setApiError('Failed to fetch vehicle makes. Please select
